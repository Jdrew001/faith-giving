name: development

on:
  push:
    branches:
      - development

env:
  FAITH_GIVING_API: "faith-giving-api"
  FAITH_GIVING_UI: "faith-giving-ui"
  
      
jobs:
  build-test:
    permissions: write-all
    name: connectdb
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Nx CLI
        run: npm install -g @nrwl/cli

      - uses: nrwl/nx-set-shas@v3
        with: 
          main-branch-name: 'development'
          
      - run: npm i --force
      - run: npm --prefix api-gateway --omit=dev -f install
      - run: npx nx affected -t build --parallel=3

      - name: Check affected projects
        id: affected-projects
        run: |
          affected_projects=$(npx nx print-affected --base=${{ github.event.before }} --head=${{ github.sha }} --select=projects)
          echo "::set-output name=projects::$affected_projects"
          echo "Workspace: ${{ github.workspace }}"

      - name: Upload Faith-Giving-UI Files
        if: contains(steps.affected-projects.outputs.projects, env.FAITH_GIVING_UI)
        uses: actions/upload-artifact@v3
        with:
          name: faith_giving_ui
          path: dist/apps/faith-giving-ui

      - name: Download UI Files
        if: contains(steps.affected-projects.outputs.projects, env.FAITH_GIVING_UI)
        uses: actions/download-artifact@v2
        with:
          name: faith_giving_ui
          path: ui_project

      - name: Copy UI to Server
        if: contains(steps.affected-projects.outputs.projects, env.FAITH_GIVING_UI)azqszsa≈ì
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: ui_project/
          target: /root/projects/faith-giving-ui/
          recursive: true
          strip_components: 1

      # - name: Copy files using scp with username and password
      #   env:
      #     USERNAME: ${{ secrets.USERNAME }}
      #     PASSWORD: ${{ secrets.PASSWORD }}
      #     HOST: ${{ secrets.HOST }}
      #   run: |
      #     expect -c '
      #       spawn scp -r ui_project/ $env(USERNAME)@$env(HOST):/root/projects/test
      #       expect "password:"
      #       send "$env(PASSWORD)\r"
      #       interact
      #     '
      